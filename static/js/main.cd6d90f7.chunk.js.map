{"version":3,"sources":["pages/Research/Research.md","pages/About/About.js","pages/CV/CV.js","pages/Home/components/Lattice.js","pages/Home/Home.js","pages/Research/Research.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","props","className","href","Component","CV","state","cv_markdown","get_resume","bind","get_section_html","sections","this","sections_html_list","i","length","push","content_object","section_name","content_html_list","this_item","this_item_html","Lattice","state_matrix","anim","lattice_size","create_lattice","draw_from_binomial","update_lattice","update_predator_cell","update_prey_cell","update_cell","get_neighbors_of_some_state","get_neighbors","get_new_state_matrix","shuffle","are_adjacent","pause","setInterval","clearInterval","interval","setState","row","j","Math","random","init_state_matrix","coord","x","y","neighbors","dx","dy","neighbor_x","neighbor_y","boundary_condition","neighbor_obj","target_state","num_neighbors","return_neighbors","neighbor","n","p","counter","sum","node1","node2","abs","old_state_matrix","new_state_matrix","predator_neighbors","prey_neighbors","num_predator_neighbors","num_prey_neighbors","predator_ct","prey_ct","prey_x","prey_y","array","floor","empty_neighbors","num_empty_neighbors","new_x","new_y","rows","this_row","concat","onClick","Home","View","style","flex","flexDirection","Research","markdown","require","fetch","then","response","text","source","App","to","path","exact","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.cd6d90f7.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Research.0584dc71.md\";","import React, { Component } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './About.sass';\n\nclass About extends Component {\n   constructor(props){\n      super(props);\n   }\n\n   componentDidMount() {\n   }\n\n   componentDidUpdate() {\n   }\n\n\n\n   render() {\n        //var md = this.state.md_text;\n        return (<div className=\"about_container\">\n                    <h1> about  </h1> <br/>\n                    <p className=\"about_body\">hiâ€”<br/><br/>\n                    i'm michael, and this is my website. i'm a graduate student in the <a href=\"http://www.gonzalezlab.weebly.com\">Gonzalez Lab</a> at McGill University.\n\n                    <br/><br/> i study <a href=\"https://en.wikipedia.org/wiki/Community_(ecology)\">community ecology</a> using <a href=\"https://en.wikipedia.org/wiki/Theoretical_ecology\">computer simulation models and math</a>, with the goals of understanding how humans are affecting Earth's <a href=\"https://en.wikipedia.org/wiki/Biodiversity\"> biodiversity</a>, building software to <a href=\"https://en.wikipedia.org/wiki/Ecological_forecasting\">forecast ecological systems</a>, and <a href=\"https://en.wikipedia.org/wiki/Wildlife_corridor\">designing landscapes</a> that best mitigate <a href=\"https://en.wikipedia.org/wiki/Holocene_extinction\"> biodiversity loss</a> and its <a href=\"https://en.wikipedia.org/wiki/Ecosystem_service\"> impacts on humanity</a>.\n\n\n                    <br/> <br/><br/>\n                    <p className=\"email_text\"> i can be reached at <label className=\"email\"> nrxszvo.xzgxsvm@nzro.nxtroo.xz </label><br/><a href=\"http://rumkin.com/tools/cipher/atbash.php\">decode this cypher</a></p></p>\n\n                </div>\n        );\n   }\n}\n\nexport default About;\n","import React, {Component} from 'react';\nimport './CV.sass'\n\nclass CV extends Component {\n    constructor(props){\n        super(props);\n        this.state = { cv_markdown: null };\n        this.get_resume = this.get_resume.bind(this);\n        this.get_section_html(this);\n    }\n\n    get_resume(){\n            var education = [\n                {\n                    \"title\": \"McGill University\",\n                    \"subtitle\": \"doctor of philosophy\",\n                    \"description_header\": \"Gonzalez Lab, Department of Biology \",\n                    \"description\": \"how does the structure of ecological communities change across time and space? how can we predict how human influence on our planet, in the forms of land use change and climate change, will affect both the Earth's biodiversity and the services it provides humanity? how can we design landscapes to mitigate biodiversity loss? these are the central questions i'm thinking about these days.  \",\n                    \"time\": \"2020 - present\"\n                },\n                {\n                    \"title\": \"University of Colorado Boulder\",\n                    \"subtitle\": \"master of arts\",\n                    \"description_header\": \"Flaxman Lab, Department of Ecology and Evolutionary Biology\",\n                    \"description\": \"my master's work discusses how landscape structure and dispersal capacity create phase transitions in metapopulation synchrony under a stochastic-logistic model of population dynamics. see 'phase transitions in metapopulation synchrony' below for the associated publication\",\n                    \"time\": \"2018 - 2020\"\n                },\n                {\n                    \"title\": \"University of Colorado Boulder\",\n                    \"subtitle\": \"bachelor of arts\",\n                    \"description_header\": \"major\",\n                    \"description\": \"ecology and evolutionary biology\",\n                    \"time\": \"2015 - 2020\"\n                }\n            ];\n\n            var publications = [\n                { \"title\": \"phase transitions in metapopulation synchrony\", \"time\": \"august 2020\",\n                \"subtitle\": \"in submission\",\n                \"description\": \"archiv link coming soon\"}\n            ];\n\n            var teaching = [ {\"title\": \"teaching assistant\", \"subtitle\": \"general biology laboratory 2\", \"time\": \"spring 2020\", \"description\": \"led laboratory experiments in clases of roughly 20 students. taught fundementals of the scientific method, introductory statistics, and lab protocols for a survey of topics in biology.\"},\n                            {\"title\": \"teaching assistant\", \"subtitle\" : \"general biology laboratory 1\", \"time\": \"fall 2020\", \"description\": \"led laboratory experiments in clases of roughly 20 students. taught fundementals of the scientific method, introductory statistics, and lab protocols for a survey of topics in biology.\"},\n                            {\"title\": \"learning assistant\", \"subtitle\" : \"calculus 1, 2, 3\", \"time\": \"spring 2016 - fall 2017\", \"description\": \"Taught calculus 1, 2, and 3 in a workgroup setting, gained experience in communicating abstract concepts, reframing mathematical ideas in different ways for different learners.\"}\n\n            ];\n\n            var work = [\n\n            {\"title\": \"laboratory assitant\",\n            \"subtitle\":\"Melbourne Lab, CU Boulder\",\n            \"time\": \"summer 2018\",\n            \"description\": \"Kept model Tribolium systems running, learned the logistics of running long-term ecological experiments in the laboratory.\"},\n\n            {\"title\": \"flight software engineering intern\", \"subtitle\":\"NASA Jet Propulsion Laboratory\", \"time\": \"summer 2017\", \"description\": \"Worked as a flight software engineer for LunarFlashlight and NEAScout 6U cubesats. Developed skills in planning and implementing flight software system architecture, unit testing, and integration testing on the flight software system level using C and Python.\"},\n\n\n            {\"title\": \"systems engineering intern\", \"subtitle\":\"NASA Jet Propulsion Laboratory\", \"time\": \"summer 2016\", \"description\": \"Created a content management system for the Mission Planning, Sequencing, and Analysis division's website. Developed skills using popular web frameworks for both front and back-end development. Learned skills in asynchronous web development.\"},\n\n            {\"title\": \"systems engineering intern\", \"subtitle\":\"NASA Jet Propulsion Laboratory\", \"time\": \"summer 2015\",  \"description\": \"Created a content management system for the Mission Planning, Sequencing, and Analysis division's website. Developed skills using popular web frameworks for both front and back-end development. Learned skills in asynchronous web development.\"},\n            ];\n            var skills = [];\n\n            var education_html = this.get_section_html(education, \"education\");\n            var publications_html = this.get_section_html(publications, \"publications\");\n            var teaching_html = this.get_section_html(teaching, \"teaching\");\n            var work_html = this.get_section_html(work, \"work\");\n            var skills_html = this.get_section_html(skills, \"skills\");\n\n            var sections = [education_html, publications_html, teaching_html, work_html, skills_html];\n            var sections_html_list = [];\n            for (var i = 0; i < sections.length; i++){\n                sections_html_list.push(<div className=\"cv_section\">{sections[i]}</div>);\n            }\n            sections_html_list.push();\n            return(sections_html_list);\n    }\n\n   componentWillMount() {\n\n   }\n\n   get_section_html(content_object, section_name){\n       var content_html_list= [];\n\n       for (var i = 0; i < content_object.length; i++){\n           var this_item = content_object[i];\n\n           var this_item_html =\n               (<div className=\"cv_item\">\n                   <div className=\"title\"> {this_item[\"title\"]}</div>\n                   <div className=\"time\">{this_item[\"time\"]}</div>\n                   <div className=\"subtitle\"> {this_item[\"subtitle\"]}</div>\n\n                   <div className=\"description\">\n                        <div className=\"description_header\">{this_item['description_header']} </div>\n                        <div className=\"description_body\"> {this_item['description']} </div>\n                   </div>\n               </div>);\n\n           content_html_list.push(this_item_html);\n       }\n       return(<div className=\"publications\"><h2>{section_name}</h2>{content_html_list}</div>);\n   }\n\n   render() {\n        return (\n                <div className=\"cv\">\n                    <h1>curriculum vita</h1>\n                    {this.get_resume()}\n                </div>\n        );\n   }\n}\n\n\nexport default CV;\n","import React, { Component } from 'react';\nimport './Lattice.sass';\n\nvar PREDATOR = 1;\nvar PREY = 0;\nvar EMPTY = 2;\nvar C_PREY = 0.3;\nvar E_PREY = 0.;\nvar C_PREDATOR = 0.15;\nvar E_PREDATOR = 0.1;\n\nclass Lattice extends Component {\n    constructor(props){\n        super(props);\n        this.state = { state_matrix: null, anim: 1, lattice_size: 30 };\n        this.create_lattice = this.create_lattice.bind(this);\n        this.draw_from_binomial = this.draw_from_binomial.bind(this);\n        this.update_lattice = this.update_lattice.bind(this);\n\n        this.update_predator_cell = this.update_predator_cell.bind(this);\n        this.update_prey_cell = this.update_prey_cell.bind(this);\n\n        this.update_cell = this.update_cell.bind(this);\n\n        this.get_neighbors_of_some_state = this.get_neighbors_of_some_state.bind(this);\n        this.get_neighbors = this.get_neighbors.bind(this);\n        this.get_new_state_matrix = this.get_new_state_matrix.bind(this);\n        this.shuffle = this.shuffle.bind(this);\n        this.are_adjacent = this.are_adjacent.bind(this);\n\n\n        this.pause = this.pause.bind(this);\n    }\n    componentWillMount() {\n        this.create_lattice();\n    }\n    componentDidMount() {\n        setInterval(this.update_lattice, 100);\n    }\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    pause(){\n        this.setState({anim: !this.state.anim});\n    }\n\n    /*  =====================================================\n    //\n    //      initialization functions\n    //\n    //  ===================================================== */\n    init_state_matrix() {\n        var lattice_size = this.state.lattice_size;\n        var state_matrix = [];\n        for (var i = 0; i < lattice_size; i++){\n            var row = [];\n            for (var j = 0; j < lattice_size; j++){\n\n                var state = EMPTY;\n                var denom = 3+5*Math.random();\n                if (j < lattice_size/denom){\n                    state = PREDATOR;\n                }\n                else {\n                    state = PREY;\n                }\n\n                row.push(state);\n            }\n            state_matrix.push(row);\n        }\n        return(state_matrix);\n    }\n\n    create_lattice() {\n        var state_matrix = this.init_state_matrix();\n        this.setState({state_matrix: state_matrix});\n     }\n\n     boundary_condition(coord) {\n        var lattice_size = this.state.lattice_size;\n        if (coord >= lattice_size){\n            return 0;\n        }\n        if (coord < 0){\n            return lattice_size;\n        }\n        return coord;\n     }\n\n    /*  =====================================================\n    //\n    //    functions to map between data structures\n    //\n    //  ===================================================== */\n\n   get_neighbors(x,y) {\n        var lattice_size = this.state.lattice_size;\n        var neighbors = [];\n        // neighbors of x,y\n        if (x){\n                for (var dx=-1; dx < 2; dx++){\n                    for (var dy=-1; dy < 2; dy++){\n                      var neighbor_x = x+dx;\n                      var neighbor_y = y+dy;\n\n                      neighbor_x = this.boundary_condition(neighbor_x);\n                      neighbor_y = this.boundary_condition(neighbor_y);\n\n                      if (!(neighbor_x === x && neighbor_y === y)){\n                          var neighbor_obj = {x: neighbor_x, y: neighbor_y};\n                          neighbors.push(neighbor_obj);\n                      }\n                    }\n                }\n            return neighbors;\n        }\n       return [];\n    }\n\n    get_neighbors_of_some_state(state_matrix, i, j, target_state) {\n        var neighbors = this.get_neighbors(i,j);\n        var num_neighbors = neighbors.length;\n        var return_neighbors = [];\n        for (var i = 0; i < num_neighbors; i++){\n            var neighbor = neighbors[i];\n            var this_state = state_matrix[neighbor.x][neighbor.y];\n\n            if (this_state == target_state){\n                return_neighbors.push(neighbors[i]);\n            }\n        }\n        return return_neighbors;\n    }\n\n    /*  =====================================================\n    //\n    //   functions to update the lattice at each time step\n    //\n    //  ===================================================== */\n\n    draw_from_binomial(n, p){\n        var counter = 0;\n        var sum = 0;\n\n        while(counter < n){\n            if (Math.random() < p) {\n                sum += 1;\n            }\n            counter++;\n        }\n\n        return sum;\n    }\n\n    are_adjacent(node1, node2){\n        if (Math.abs(node1.x - node2.x) <= 1 && Math.abs( node1.y - node2.y) <= 1){\n            return true;\n        }\n        return false;\n    }\n\n    update_predator_cell(old_state_matrix, i, j){\n        var new_state_matrix = {...old_state_matrix};\n\n        var predator_neighbors = this.get_neighbors_of_some_state(old_state_matrix, i, j, PREDATOR);\n        var prey_neighbors = this.get_neighbors_of_some_state(old_state_matrix, i, j, PREY);\n\n        var num_predator_neighbors = predator_neighbors.length;\n        var num_prey_neighbors = prey_neighbors.length;\n\n        if (Math.random() < E_PREDATOR){\n            new_state_matrix[i][j] = EMPTY;\n        }\n\n        if (num_predator_neighbors < 1){\n            new_state_matrix[i][j] = EMPTY;\n            return new_state_matrix;\n        }\n\n        if (num_prey_neighbors < 1){\n            return new_state_matrix;\n        }\n\n\n        for (var predator_ct = 0; predator_ct < num_predator_neighbors; predator_ct++){\n            for (var prey_ct = 0; prey_ct < num_prey_neighbors; prey_ct++){\n                if (this.are_adjacent(prey_neighbors[prey_ct], predator_neighbors[predator_ct])){\n                    if (Math.random() < C_PREDATOR){\n                        var prey_x = prey_neighbors[prey_ct].x;\n                        var prey_y = prey_neighbors[prey_ct].y;\n                        new_state_matrix[prey_x][prey_y] = PREDATOR;\n                        break;\n                    }\n                }\n            }\n        }\n\n        return new_state_matrix;\n    }\n\n    shuffle(array) {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n        return(array);\n    }\n\n    update_prey_cell(old_state_matrix, i, j){\n        var new_state_matrix = {...old_state_matrix};\n        var empty_neighbors = this.get_neighbors_of_some_state(old_state_matrix, i, j, EMPTY);\n        var num_empty_neighbors = empty_neighbors.length;\n\n        if (Math.random() < E_PREY){\n            new_state_matrix[i][j] = EMPTY;\n        }\n\n        if (num_empty_neighbors > 0){\n            //var num_colonized = this.draw_from_binomial(num_empty_neighbors, C_PREY);\n            // if (num_colonized > 0){\n            if (Math.random() < C_PREY) {\n                empty_neighbors = this.shuffle(empty_neighbors);\n                var new_x = empty_neighbors[0].x;\n                var new_y = empty_neighbors[0].y;\n                new_state_matrix[new_x][new_y] = PREY;\n            }\n        }\n        return new_state_matrix;\n    }\n\n    update_cell(old_state_matrix, i, j){\n    }\n\n    get_new_state_matrix(old_state_matrix){\n        var lattice_size = this.state.lattice_size;\n        var new_state_matrix = {...old_state_matrix};\n\n        for (var i = 0; i < lattice_size; i++){\n            for (var j = 0; j < lattice_size; j++){\n                if (old_state_matrix[i][j] == PREY){\n                    new_state_matrix = this.update_prey_cell(old_state_matrix, i, j);\n                }\n                if (old_state_matrix[i][j] == PREDATOR){\n                    new_state_matrix = this.update_predator_cell(old_state_matrix, i, j);\n                }\n            }\n        }\n\n        return(new_state_matrix);\n    }\n\n    update_lattice() {\n        if (this.state.anim){\n        var current_state = {...this.state};\n        var old_state_matrix = current_state.state_matrix;\n\n        var new_state_matrix = this.get_new_state_matrix(old_state_matrix);\n        this.setState({state_matrix: new_state_matrix});\n        }\n    }\n\n\n    /*  =====================================================\n    //\n    //   render\n    //\n    //  ===================================================== */\n\n    render() {\n       var lattice_size = this.state.lattice_size;\n       var state_matrix = this.state.state_matrix;\n       var rows = [];\n\n       for (var i = 0; i < lattice_size; i++){\n            var this_row = [];\n            for (var j = 0; j < lattice_size; j++){\n                var state = \"state\".concat(state_matrix[i][j]);\n                 this_row.push( (<div className=\"cell\"><span className={state}></span></div>));\n            }\n            rows.push(<div className=\"row\">{this_row}</div>)\n       }\n\n       return (<div><div className=\"lattice\">{rows}</div>  <div className=\"pause_button\" onClick={this.pause}>pause</div></div>);\n   }\n}\n\nexport default Lattice;\n","import React, { Component } from 'react';\nimport  * as d3 from 'd3';\nimport Lattice from './components/Lattice';\nimport './Home.sass';\nimport { View } from 'react-native';\n\n\nclass Home extends Component {\n   constructor(props){\n      super(props);\n   }\n\n   componentDidMount() {\n   }\n\n   componentDidUpdate() {\n   }\n\n   render() {\n        return (\n            <div className=\"home_container\">\n\n            <View style={{flex:1, flexDirection: 'row'}}>\n                <View style={{flex: 0.5}}>\n                        <Lattice/>\n                </View>\n                <View style={{flex: 0.5}}>\n                    <div className=\"label_container\">\n                        <label>community ecology <br/> in space and time </label>\n                    </div>\n                </View>\n\n            </View>\n            </div>\n\n        );\n   }\n}\n\nexport default Home;\n","import React, { Component } from 'react'\nimport ReactMarkdown  from 'react-markdown'\n\nclass Research extends Component {\n    constructor(props){\n       super(props)\n       this.state = { markdown: null }\n\n    }\n\n    componentDidMount() {\n        const markdown = require(\"./Research.md\");\n        fetch(markdown).then((response) => response.text()).then((text) => {\n            this.setState({ markdown: text })\n        })\n    }\n    componentDidUpdate() {\n    }\n\n\n\n    render(){\n        return(\n            <div>\n            <ReactMarkdown source={this.state.markdown} />\n            </div>\n        );\n    }\n}\n\nexport default Research;\n","import React from 'react';\nimport './main.sass';\n\nimport About from './pages/About/About';\nimport CV from './pages/CV/CV';\nimport Home from './pages/Home/Home';\nimport Research from './pages/Research/Research';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <div>\n\n                    {/* nav bar*/}\n                    <div className=\"header\">\n                        <div className=\"nav_bar\">\n                            <div><Link to=\"/\">home</Link></div>\n                            <div><Link to=\"/about\">about</Link></div>\n                            <div><Link to=\"/cv\">cv</Link></div>\n\n                        </div>\n                        <div className=\"name\"> michael catchen </div>\n                    </div>\n\n                    {/* routing*/}\n                    <Switch>\n                        <div className=\"body_container\">\n                            <Route path=\"/about\">\n                                <About/>\n                            </Route>\n\n                            <Route path=\"/research\">\n                                <Research/>\n                            </Route>\n\n                            <Route path=\"/cv\">\n                                <CV/>\n                            </Route>\n\n                            <Route exact path=\"/\">\n                                <Home />\n                            </Route>\n                        </div>\n                    </Switch>\n                </div>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}