{"version":3,"sources":["pages/About/about.md","pages/Research/Research.md","pages/About/About.js","pages/CV/CV.js","pages/Home/components/Lattice.js","pages/Home/Home.js","pages/Research/Research.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","props","getMarkdown","bind","markdown","require","fetch","then","response","text","console","log","setState","md_text","Component","CV","state","cv_markdown","get_resume","get_education_html","get_publications_html","get_teaching_html","get_work_html","get_skills_html","education","education_html_list","i","length","this_school","this_school_html","className","push","publications","publications_html_list","teaching","teaching_html_list","work","work_html_list","skills","skills_html_list","sections","this","sections_html_list","Lattice","state_matrix","anim","lattice_size","create_lattice","draw_from_binomial","update_lattice","update_predator_cell","update_prey_cell","update_cell","get_neighbors_of_some_state","get_neighbors","get_new_state_matrix","shuffle","are_adjacent","pause","setInterval","clearInterval","interval","row","j","u","Math","random","init_state_matrix","coord","x","y","neighbors","dx","dy","neighbor_x","neighbor_y","boundary_condition","neighbor_obj","target_state","num_neighbors","return_neighbors","neighbor","n","p","counter","sum","node1","node2","abs","old_state_matrix","new_state_matrix","predator_neighbors","prey_neighbors","num_predator_neighbors","num_prey_neighbors","predator_ct","prey_ct","prey_x","prey_y","array","floor","empty_neighbors","num_empty_neighbors","new_x","new_y","rows","this_row","concat","onClick","Home","Research","source","App","to","path","data","size","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c562b34f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/about.a3cbc237.md\";","module.exports = __webpack_public_path__ + \"static/media/Research.0584dc71.md\";","import React, { Component } from 'react';\nimport ReactMarkdown from 'react-markdown';\nimport './About.sass';\n\nclass About extends Component {\n   constructor(props){\n      super(props);\n      this.getMarkdown = this.getMarkdown.bind(this);\n   }\n\n   componentDidMount() {\n       const markdown = require(\"./about.md\");\n       fetch(markdown).then((response) => response.text()).then((text) => {\n           console.log(text);\n           this.setState({md_text: text});\n       });\n   }\n\n   componentDidUpdate() {\n   }\n\n\n   getMarkdown(){\n\n   }\n\n   render() {\n        //var md = this.state.md_text;\n        return (<div><h1> about  </h1></div>\n        //        <div> <ReactMarkdown source={md}  /></div>\n        );\n   }\n}\n\nexport default About;\n","import React, {Component} from 'react';\nimport './CV.sass'\n\nclass CV extends Component {\n    constructor(props){\n        super(props);\n        this.state = { cv_markdown: null };\n        this.get_resume = this.get_resume.bind(this);\n        this.get_education_html(this);\n        this.get_publications_html(this);\n        this.get_teaching_html(this);\n        this.get_work_html(this);\n        this.get_skills_html(this);\n    }\n\n    get_education_html(education){\n        var education_html_list= [];\n\n        for (var i = 0; i < education.length; i++){\n            var this_school = education[i];\n\n            var this_school_html =\n                (<div className=\"school cv_item\">\n                    <div className=\"degree\"> {this_school[\"degree\"]}</div>\n                    <div className=\"degree_date\">{this_school[\"start\"]} - {this_school[\"end\"]}</div>\n                    <div className=\"school_name\"> {this_school[\"school\"]}</div>\n                    <div className=\"description\">{this_school['description']} </div>\n                </div>);\n\n            education_html_list.push(this_school_html);\n        }\n        return(<div className=\"education\"><h2>education</h2>{education_html_list}</div>);\n    }\n\n    get_publications_html(publications){\n        var publications_html_list= [];\n\n        for (var i = 0; i < publications.length; i++){\n            var this_school = publications[i];\n\n            var this_school_html =\n                (<div className=\"school cv_item\">\n                    <div className=\"degree\"> {this_school[\"title\"]}</div>\n                    <div className=\"degree_date\">{this_school[\"date\"]}</div>\n                    <div className=\"school_name\"> {this_school[\"status\"]}</div>\n                </div>);\n\n            publications_html_list.push(this_school_html);\n        }\n        return(<div className=\"publications\"><h2>publications</h2>{publications_html_list}</div>);\n    }\n\n    get_teaching_html(teaching){\n        var teaching_html_list= [];\n\n        for (var i = 0; i < teaching.length; i++){\n            var this_school = teaching[i];\n\n            var this_school_html =\n                (<div className=\"school\">\n                    <div className=\"degree\"> {this_school[\"title\"]}</div>\n                    <div className=\"degree_date\">{this_school[\"term\"]}</div>\n                    <div className=\"school_name\"> {this_school[\"course\"]}</div>\n                </div>);\n\n            teaching_html_list.push(this_school_html);\n        }\n        return(<div className=\"teaching\"><h2>teaching</h2>{teaching_html_list}</div>);\n    }\n\n\n    get_work_html(work) {\n        var work_html_list= [];\n\n        for (var i = 0; i < work.length; i++){\n            var this_school = work[i];\n\n            var this_school_html =\n                (<div className=\"school\">\n                    <div className=\"degree\"> {this_school[\"title\"]}</div>\n                    <div className=\"degree_date\">{this_school[\"time\"]} </div>\n                    <div className=\"school_name\"> {this_school[\"employer\"]}</div>\n                </div>);\n\n            work_html_list.push(this_school_html);\n        }\n        return(<div className=\"work\"><h2>work</h2>{work_html_list}</div>);\n    }\n\n    get_skills_html(skills) {\n        var skills_html_list= [];\n\n        for (var i = 0; i < skills.length; i++){\n            var this_school = skills[i];\n\n            var this_school_html =\n                (<div className=\"school\">\n                    <div className=\"degree\"> {this_school[\"degree\"]}</div>\n                    <div className=\"degree_date\">{this_school[\"term\"]}</div>\n                    <div className=\"school_name\"> {this_school[\"school\"]}</div>\n                </div>);\n\n            skills_html_list.push(this_school_html);\n        }\n        return(<div className=\"skills\"><h2>skills</h2>{skills_html_list}</div>);\n    }\n\n    get_resume(){\n        var education = [\n            {\n                \"school\": \"McGill University\",\n                \"degree\": \"doctor of philosophy\",\n                \"description\": \"this is a description\",\n                \"start\": \"2020\",\n                \"end\": \"present\"\n            },\n            {\n                \"school\": \"University of Colorado Boulder\",\n                \"degree\": \"master of arts\",\n                \"start\": \"2018\",\n                \"end\": \"2020\"\n            },\n            {\n                \"school\": \"University of Colorado Boulder\",\n                \"degree\": \"bachelor of arts\",\n                \"start\": \"2015\",\n                \"end\": \"2020\",\n            }\n        ];\n\n        var publications = [\n            { \"title\": \"phase transitions in metapopulation synchrony\", \"date\": \"july 2020\", \"status\": \"in submission\", \"link\": \"archiv link coming soon\"}\n        ];\n\n        var teaching = [ {\"title\": \"teaching assistant\", \"course\" : \"general biology 2\", \"term\": \"spring 2020\",},\n                        {\"title\": \"teaching assistant\", \"course\" : \"general biology 1\", \"term\": \"fall 2020\"}\n        ];\n\n        var work = [ {\"title\": \"flight software engineering intern\", \"employer\":\"NASA Jet Propulsion Laboratory\", \"time\": \"summer 2017\"},\n                    {\"title\": \"systems engineering intern\", \"employer\":\"NASA Jet Propulsion Laboratory\", \"time\": \"summer 2016\"},\n                    {\"title\": \"systems engineering intern\", \"employer\":\"NASA Jet Propulsion Laboratory\", \"time\": \"summer 2015\"},\n        ];\n        var skills = [];\n\n        var education_html = this.get_education_html(education);\n        var publications_html = this.get_publications_html(publications);\n        var teaching_html = this.get_teaching_html(teaching);\n        var work_html = this.get_work_html(work);\n        var skills_html = this.get_skills_html(skills);\n\n        var sections = [education_html, publications_html, teaching_html, work_html, skills_html];\n        var sections_html_list = [];\n        for (var i = 0; i < sections.length; i++){\n            sections_html_list.push(<div className=\"cv_section\">{sections[i]}</div>);\n        }\n        return(sections_html_list);\n    }\n\n\n\n   componentWillMount() {\n     \n   }\n\n\n   render() {\n        return (\n                <div>\n                    <h1>curriculum vita</h1>\n                    {this.get_resume()}\n                </div>\n        );\n   }\n}\n\n\nexport default CV;\n","import React, { Component } from 'react';\nimport './Lattice.sass';\n\nvar PREDATOR = 1;\nvar PREY = 0;\nvar EMPTY = 2;\nvar C_PREY = 0.3;\nvar E_PREY = 0.;\nvar C_PREDATOR = 0.15;\nvar E_PREDATOR = 0.1;\n\nclass Lattice extends Component {\n    constructor(props){\n        super(props);\n        this.state = { state_matrix: null, anim: 1, lattice_size: 45 };\n        this.create_lattice = this.create_lattice.bind(this);\n        this.draw_from_binomial = this.draw_from_binomial.bind(this);\n        this.update_lattice = this.update_lattice.bind(this);\n\n        this.update_predator_cell = this.update_predator_cell.bind(this);\n        this.update_prey_cell = this.update_prey_cell.bind(this);\n\n        this.update_cell = this.update_cell.bind(this);\n\n        this.get_neighbors_of_some_state = this.get_neighbors_of_some_state.bind(this);\n        this.get_neighbors = this.get_neighbors.bind(this);\n        this.get_new_state_matrix = this.get_new_state_matrix.bind(this);\n        this.shuffle = this.shuffle.bind(this);\n        this.are_adjacent = this.are_adjacent.bind(this);\n\n\n        this.pause = this.pause.bind(this);\n    }\n    componentWillMount() {\n        this.create_lattice();\n    }\n    componentDidMount() {\n        setInterval(this.update_lattice, 100);\n    }\n    componentWillUnmount() {\n        clearInterval(this.interval);\n    }\n\n    pause(){\n        this.setState({anim: !this.state.anim});\n    }\n\n    /*  =====================================================\n    //\n    //      initialization functions\n    //\n    //  ===================================================== */\n    init_state_matrix() {\n        var lattice_size = this.state.lattice_size;\n        var state_matrix = [];\n        for (var i = 0; i < lattice_size; i++){\n            var row = [];\n            for (var j = 0; j < lattice_size; j++){\n                var u = Math.random();\n\n                var state = EMPTY;\n\n                if (u < 0.1){\n                    state = PREDATOR;\n                }\n                if (u > 0.6){\n                    state = PREY;\n                }\n\n                row.push(state);\n            }\n            state_matrix.push(row);\n        }\n        return(state_matrix);\n    }\n\n    create_lattice() {\n        var state_matrix = this.init_state_matrix();\n        this.setState({state_matrix: state_matrix});\n     }\n\n     boundary_condition(coord) {\n        var lattice_size = this.state.lattice_size;\n        if (coord >= lattice_size){\n            return 0;\n        }\n        if (coord < 0){\n            return lattice_size;\n        }\n        return coord;\n     }\n\n    /*  =====================================================\n    //\n    //    functions to map between data structures\n    //\n    //  ===================================================== */\n\n   get_neighbors(x,y) {\n        var lattice_size = this.state.lattice_size;\n        var neighbors = [];\n        // neighbors of x,y\n        if (x){\n                for (var dx=-1; dx < 2; dx++){\n                    for (var dy=-1; dy < 2; dy++){\n                      var neighbor_x = x+dx;\n                      var neighbor_y = y+dy;\n\n                      neighbor_x = this.boundary_condition(neighbor_x);\n                      neighbor_y = this.boundary_condition(neighbor_y);\n\n                      if (!(neighbor_x === x && neighbor_y === y)){\n                          var neighbor_obj = {x: neighbor_x, y: neighbor_y};\n                          neighbors.push(neighbor_obj);\n                      }\n                    }\n                }\n            return neighbors;\n        }\n       return [];\n    }\n\n    get_neighbors_of_some_state(state_matrix, i, j, target_state) {\n        var neighbors = this.get_neighbors(i,j);\n        var num_neighbors = neighbors.length;\n        var return_neighbors = [];\n        for (var i = 0; i < num_neighbors; i++){\n            var neighbor = neighbors[i];\n            var this_state = state_matrix[neighbor.x][neighbor.y];\n\n            if (this_state == target_state){\n                return_neighbors.push(neighbors[i]);\n            }\n        }\n        return return_neighbors;\n    }\n\n    /*  =====================================================\n    //\n    //   functions to update the lattice at each time step\n    //\n    //  ===================================================== */\n\n    draw_from_binomial(n, p){\n        var counter = 0;\n        var sum = 0;\n\n        while(counter < n){\n            if (Math.random() < p) {\n                sum += 1;\n            }\n            counter++;\n        }\n\n        return sum;\n    }\n\n    are_adjacent(node1, node2){\n        if (Math.abs(node1.x - node2.x) <= 1 && Math.abs( node1.y - node2.y) <= 1){\n            return true;\n        }\n        return false;\n    }\n\n    update_predator_cell(old_state_matrix, i, j){\n        var new_state_matrix = {...old_state_matrix};\n\n        var predator_neighbors = this.get_neighbors_of_some_state(old_state_matrix, i, j, PREDATOR);\n        var prey_neighbors = this.get_neighbors_of_some_state(old_state_matrix, i, j, PREY);\n\n        var num_predator_neighbors = predator_neighbors.length;\n        var num_prey_neighbors = prey_neighbors.length;\n\n        if (Math.random() < E_PREDATOR){\n            new_state_matrix[i][j] = EMPTY;\n        }\n\n        if (num_predator_neighbors < 1){\n            new_state_matrix[i][j] = EMPTY;\n            return new_state_matrix;\n        }\n\n        if (num_prey_neighbors < 1){\n            return new_state_matrix;\n        }\n\n\n        for (var predator_ct = 0; predator_ct < num_predator_neighbors; predator_ct++){\n            for (var prey_ct = 0; prey_ct < num_prey_neighbors; prey_ct++){\n                if (this.are_adjacent(prey_neighbors[prey_ct], predator_neighbors[predator_ct])){\n                    if (Math.random() < C_PREDATOR){\n                        var prey_x = prey_neighbors[prey_ct].x;\n                        var prey_y = prey_neighbors[prey_ct].y;\n                        new_state_matrix[prey_x][prey_y] = PREDATOR;\n                        break;\n                    }\n                }\n            }\n        }\n\n        return new_state_matrix;\n    }\n\n    shuffle(array) {\n        for (let i = array.length - 1; i > 0; i--) {\n            const j = Math.floor(Math.random() * (i + 1));\n            [array[i], array[j]] = [array[j], array[i]];\n        }\n        return(array);\n    }\n\n    update_prey_cell(old_state_matrix, i, j){\n        var new_state_matrix = {...old_state_matrix};\n        var empty_neighbors = this.get_neighbors_of_some_state(old_state_matrix, i, j, EMPTY);\n        var num_empty_neighbors = empty_neighbors.length;\n\n        if (Math.random() < E_PREY){\n            new_state_matrix[i][j] = EMPTY;\n        }\n\n        if (num_empty_neighbors > 0){\n            //var num_colonized = this.draw_from_binomial(num_empty_neighbors, C_PREY);\n            // if (num_colonized > 0){\n            if (Math.random() < C_PREY) {\n                empty_neighbors = this.shuffle(empty_neighbors);\n                var new_x = empty_neighbors[0].x;\n                var new_y = empty_neighbors[0].y;\n                new_state_matrix[new_x][new_y] = PREY;\n            }\n        }\n        return new_state_matrix;\n    }\n\n    update_cell(old_state_matrix, i, j){\n    }\n\n    get_new_state_matrix(old_state_matrix){\n        var lattice_size = this.state.lattice_size;\n        var new_state_matrix = {...old_state_matrix};\n\n        for (var i = 0; i < lattice_size; i++){\n            for (var j = 0; j < lattice_size; j++){\n                if (old_state_matrix[i][j] == PREY){\n                    new_state_matrix = this.update_prey_cell(old_state_matrix, i, j);\n                }\n                if (old_state_matrix[i][j] == PREDATOR){\n                    new_state_matrix = this.update_predator_cell(old_state_matrix, i, j);\n                }\n            }\n        }\n\n        return(new_state_matrix);\n    }\n\n    update_lattice() {\n        if (this.state.anim){\n        var current_state = {...this.state};\n        var old_state_matrix = current_state.state_matrix;\n\n        var new_state_matrix = this.get_new_state_matrix(old_state_matrix);\n        this.setState({state_matrix: new_state_matrix});\n        }\n    }\n\n\n    /*  =====================================================\n    //\n    //   render\n    //\n    //  ===================================================== */\n\n    render() {\n       var lattice_size = this.state.lattice_size;\n       var state_matrix = this.state.state_matrix;\n       var rows = [];\n\n       for (var i = 0; i < lattice_size; i++){\n            var this_row = [];\n            for (var j = 0; j < lattice_size; j++){\n                var state = \"state\".concat(state_matrix[i][j]);\n                 this_row.push( (<div className=\"cell\"><span className={state}></span></div>));\n            }\n            rows.push(<div className=\"row\">{this_row}</div>)\n       }\n\n       return (<div><div className=\"lattice\">{rows}</div>  <div className=\"pause_button\" onClick={this.pause}>pause</div></div>);\n   }\n}\n\nexport default Lattice;\n","import React, { Component } from 'react';\nimport  * as d3 from 'd3';\nimport Lattice from './components/Lattice';\nimport './Home.sass';\n\nclass Home extends Component {\n   constructor(props){\n      super(props);\n   }\n\n   componentDidMount() {\n   }\n\n   componentDidUpdate() {\n   }\n\n   render() {\n        return (\n            <div className=\"home_container\">\n                <div className=\"label_container\">\n                    <label>community ecology <br/> and complexity </label>\n                </div>\n\n                <div className=\"lattice_container\">\n                    <Lattice/>\n                </div>\n            </div>\n        );\n   }\n}\n\nexport default Home;\n","import React, { Component } from 'react'\nimport ReactMarkdown  from 'react-markdown'\n\nclass Research extends Component {\n    constructor(props){\n       super(props)\n       this.state = { markdown: null }\n\n    }\n\n    componentDidMount() {\n        const markdown = require(\"./Research.md\");\n        fetch(markdown).then((response) => response.text()).then((text) => {\n            this.setState({ markdown: text })\n        })\n    }\n    componentDidUpdate() {\n    }\n\n\n\n    render(){\n        return(\n            <div>\n            <ReactMarkdown source={this.state.markdown} />\n            </div>\n        );\n    }\n}\n\nexport default Research;\n","import React from 'react';\nimport './main.sass';\n\nimport About from './pages/About/About';\nimport CV from './pages/CV/CV';\nimport Home from './pages/Home/Home';\nimport Research from './pages/Research/Research';\n\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <Router>\n                <div>\n\n                    {/* nav bar*/}\n                    <div className=\"header\">\n                        <div className=\"nav_bar\">\n                            <div><Link to=\"/\">home</Link></div>\n                            <div><Link to=\"/about\">about</Link></div>\n                            <div><Link to=\"/cv\">cv</Link></div>\n\n                        </div>\n                        <div className=\"name\"> michael catchen </div>\n                    </div>\n\n                    {/* routing*/}\n                    <Switch>\n                        <div className=\"body_container\">\n                            <Route path=\"/about\">\n                                <About/>\n                            </Route>\n\n                            <Route path=\"/research\">\n                                <Research/>\n                            </Route>\n\n                            <Route path=\"/cv\">\n                                <CV/>\n                            </Route>\n\n                            <Route path=\"/\">\n                                      <Home data={[5,10,1,3]} size={[500,500]} />\n                            </Route>\n                        </div>\n                    </Switch>\n                </div>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}